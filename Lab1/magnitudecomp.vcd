$date
	Thu Oct 29 15:22:40 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_magnitudecomp $end
$var wire 1 ! x $end
$var wire 1 " y $end
$var wire 1 # z $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$scope module m1 $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 ( g1 $end
$var wire 1 ) g2 $end
$var wire 1 * g3 $end
$var wire 1 + l1 $end
$var wire 1 , l2 $end
$var wire 1 - l3 $end
$var wire 1 ! x $end
$var wire 1 . x0 $end
$var wire 1 / x1 $end
$var wire 1 0 x2 $end
$var wire 1 1 x3 $end
$var wire 1 " y $end
$var wire 1 2 y0 $end
$var wire 1 3 y1 $end
$var wire 1 4 y2 $end
$var wire 1 5 y3 $end
$var wire 1 # z $end
$var wire 1 6 z0 $end
$var wire 1 7 z1 $end
$var wire 1 8 z2 $end
$var wire 1 9 z3 $end
$scope module m3 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 1 x $end
$var wire 1 5 y $end
$var wire 1 9 z $end
$upscope $end
$scope module m2 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 0 x $end
$var wire 1 4 y $end
$var wire 1 8 z $end
$upscope $end
$scope module m1 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 / x $end
$var wire 1 3 y $end
$var wire 1 7 z $end
$upscope $end
$scope module m0 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 . x $end
$var wire 1 2 y $end
$var wire 1 6 z $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
z+
x*
x)
z(
bx '
bx &
bx %
bx $
z#
z"
z!
$end
#1
1-
0#
19
07
0)
08
16
0"
1!
05
0,
13
0+
0*
0(
01
10
0/
0.
04
02
1;
1=
0?
0A
1:
0<
1>
0@
b1100 %
b1100 '
b1010 $
b1010 &
#3
0!
0-
09
1"
06
15
1/
03
12
0;
1?
0>
1@
b110 %
b110 '
b1001 $
b1001 &
#5
1#
18
17
19
16
0"
00
0/
05
02
0?
0:
1<
0@
b100 %
b100 '
b100 $
b100 &
#7
