$date
	Fri Oct 30 14:28:11 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_adder_4bit $end
$var wire 1 ! cout $end
$var wire 4 " sum [3:0] $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module a4 $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 ( cin $end
$var wire 1 ! cout $end
$var wire 4 ) cout_loop [3:0] $end
$var wire 4 * sum [3:0] $end
$scope module a1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 ( cin $end
$var wire 1 - cout $end
$var wire 1 . cout1 $end
$var wire 1 / cout2 $end
$var wire 1 0 sum $end
$var wire 1 1 sum1 $end
$scope module h1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 . cout $end
$var wire 1 1 sum $end
$upscope $end
$scope module h2 $end
$var wire 1 1 a $end
$var wire 1 ( b $end
$var wire 1 / cout $end
$var wire 1 0 sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[0] $end
$scope module a $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 cin $end
$var wire 1 5 cout $end
$var wire 1 6 cout1 $end
$var wire 1 7 cout2 $end
$var wire 1 8 sum $end
$var wire 1 9 sum1 $end
$scope module h1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 6 cout $end
$var wire 1 9 sum $end
$upscope $end
$scope module h2 $end
$var wire 1 9 a $end
$var wire 1 4 b $end
$var wire 1 7 cout $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[1] $end
$scope module a $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < cin $end
$var wire 1 = cout $end
$var wire 1 > cout1 $end
$var wire 1 ? cout2 $end
$var wire 1 @ sum $end
$var wire 1 A sum1 $end
$scope module h1 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 > cout $end
$var wire 1 A sum $end
$upscope $end
$scope module h2 $end
$var wire 1 A a $end
$var wire 1 < b $end
$var wire 1 ? cout $end
$var wire 1 @ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[2] $end
$scope module a $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D cin $end
$var wire 1 E cout $end
$var wire 1 F cout1 $end
$var wire 1 G cout2 $end
$var wire 1 H sum $end
$var wire 1 I sum1 $end
$scope module h1 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 F cout $end
$var wire 1 I sum $end
$upscope $end
$scope module h2 $end
$var wire 1 I a $end
$var wire 1 D b $end
$var wire 1 G cout $end
$var wire 1 H sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
b0 *
b0 )
0(
b0 '
b0 &
0%
b0 $
b0 #
b0 "
0!
$end
#2
1H
18
1@
10
b1111 "
b1111 *
1I
19
1A
11
1C
12
1:
1+
b1000 $
b1000 '
b111 #
b111 &
#4
1D
1=
0@
1?
1<
14
18
15
1H
1-
b111 )
09
16
0I
00
b1010 "
b1010 *
1/
13
1;
0C
1,
0:
0+
1%
1(
b111 $
b111 '
b10 #
b10 &
#6
1!
08
1E
04
0H
1G
0-
b1110 )
1I
10
b1 "
b1 *
0/
0;
1C
0,
1:
1+
0%
0(
b1010 $
b1010 '
b111 #
b111 &
#8
